{"version":3,"sources":["components/header/header.js","services/services.js","pages/index/index.js","pages/details/details.js","pages/insert/insert.js","pages/update/update.js","pages/delete/delete.js","routes/routes.js","App.js","serviceWorker.js","index.js"],"names":["Header","id","api","axios","create","baseURL","Usuarios","state","usuarios","loadUsuarios","a","async","get","response","data","console","log","setState","this","className","to","map","usuario","key","_id","name","email","password","salary","role","Component","Usuario","age","phone","username","props","match","params","CriarUsuario","handleInputChange","event","target","value","prevState","handleSubmit","preventDefault","post","then","status","redirect","catch","error","onSubmit","htmlFor","type","placeholder","maxLength","required","onChange","EditarUsuario","put","DeletarUsuario","handleClick","fetch","method","ok","onClick","Routes","exact","path","component","Index","Details","Insert","Update","Delete","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8c27a205.chunk.js","sourcesContent":["import React from 'react';\nimport './header.css';\n\nconst Header = () => (\n    <header id=\"main\">Pessoas Usuárias</header>\n);\n\nexport default Header;\n","import axios from 'axios';\n\nconst api = axios.create({baseURL: 'http://localhost:3000/'});\n\nexport default api;","import React, { Component } from 'react';\nimport api from '../../services/services';\nimport { Link } from 'react-router-dom';\nimport './index.css';\nimport { AiOutlineMail, AiOutlineLock, AiOutlineMoneyCollect, AiOutlineUser } from 'react-icons/ai';\n\nexport default class Usuarios extends Component {\n    state = {\n        usuarios: [],\n    };\n\n    componentDidMount() {\n        this.loadUsuarios();\n    }\n\n    loadUsuarios = async () => {\n        const response = await api.get(`/users`);\n\n        const usuarios = response.data;\n        console.log(usuarios)\n        this.setState({ usuarios });\n    };\n\n    render() {\n        const { usuarios } = this.state;\n        return (\n            <div className=\"usuario-list\">\n                <p>\n                    <Link to={`/criarusuario`}> Criar Pessoa Usuária </Link>\n                </p>\n                {usuarios.map(usuario => (\n                    <article key={usuario._id}>\n                        <strong> {usuario.name} </strong>\n                        <p> <AiOutlineMail /> {usuario.email} </p>\n                        <p> <AiOutlineLock /> {usuario.password} </p>\n                        <p> <AiOutlineMoneyCollect /> {usuario.salary} </p>\n                        <p> <AiOutlineUser /> {usuario.role} </p>\n                        <p> <Link to={`/usuarios/${usuario._id}`}> Acessar </Link> </p>\n                    </article>\n                ))}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport api from '../../services/services';\nimport { Link } from \"react-router-dom\";\nimport { AiOutlineMail, AiOutlineLock, AiOutlineMoneyCollect, AiOutlineUser } from 'react-icons/ai';\n\nexport default class Usuario extends Component {\n    state = {\n        usuario: {\n            name: \"\",\n            age: 0,\n            phone: \"\",\n            email: \"\",\n            username: \"\"\n        },\n    };\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n\n        const response = await api.get(`/users/${id}`);\n\n        this.setState({ usuario: response.data });\n    }\n\n    render() {\n        const { usuario } = this.state;\n\n        return (\n            <div className=\"usuario-list\">\n                <article key={usuario.id}>\n                    <strong> {usuario.name} </strong>\n                    <p> <AiOutlineMail /> {usuario.email} </p>\n                    <p> <AiOutlineLock /> {usuario.password} </p>\n                    <p> <AiOutlineMoneyCollect /> {usuario.salary} </p>\n                    <p> <AiOutlineUser /> {usuario.role} </p>\n                    <p> <Link to={`/`}> Voltar </Link> </p>\n                    <p> <Link to={`/EditarUsuario/${usuario._id}`}> Editar </Link> </p>\n                    <p> <Link to={`/DeletarUsuario/${usuario._id}`}> Deletar </Link> </p>\n                </article>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport './insert.css';\nimport { Redirect, Link } from \"react-router-dom\";\nimport api from '../../services/services';\n\nclass CriarUsuario extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            usuario: {\n                name: \"\",\n                email: \"\",\n                password: \"\",\n                role: \"\",\n                salary: 0\n            },\n            redirect: false,\n        };\n    }\n\n    handleInputChange = event => {\n        const target = event.target;\n        const name = target.name;\n        const value = target.value;\n\n        this.setState(prevState => ({\n            usuario: { ...prevState.usuario, [name]: value }\n        }));\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const { usuario: { name, email, password, role, salary } } = this.state;\n\n        api.post('/users', {\n            name, email, password, role, salary\n        })\n            .then(response => {\n                console.log(response)\n                if (response.status === 201) {\n                    this.setState({ redirect: true });\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    };\n\n    render() {\n        const { redirect } = this.state;\n\n        if (redirect) {\n            return <Redirect to=\"/\" />;\n        } else {\n            return (\n                <form onSubmit={this.handleSubmit}>\n                <fieldset>\n                    <legend>Cadastrar Pessoa Usuária</legend>\n                    <div className=\"usuario-insert\">\n                        <label htmlFor=\"name\">Nome </label>\n                        <br />\n                        <input\n                            type=\"text\"\n                            id=\"name\"\n                            name=\"name\"\n                            placeholder=\"Nome\"\n                            maxLength=\"100\"\n                            required\n                            value={this.state.usuario.name}\n                            onChange={this.handleInputChange}\n                        />\n                    </div>\n                    <div className=\"usuario-insert\">\n                    <label htmlFor=\"email\">E-mail </label>\n                        <br />\n                        <input\n                            type=\"text\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"E-mail\"\n                            maxLength=\"100\"\n                            required\n                            value={this.state.usuario.email}\n                            onChange={this.handleInputChange}\n                        />\n                    </div>\n                    <div className=\"usuario-insert\">\n                        <label htmlFor=\"password\">Senha </label>\n                        <br />\n                        <input\n                            type=\"text\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Senha\"\n                            maxLength=\"20\"\n                            required\n                            value={this.state.usuario.password}\n                            onChange={this.handleInputChange}\n                        />\n                    </div>\n                    <div className=\"usuario-insert\">\n                        <label htmlFor=\"role\">Papel </label>\n                        <br />\n                        <input\n                            type=\"text\"\n                            id=\"role\"\n                            name=\"role\"\n                            placeholder=\"Papel\"\n                            maxLength=\"50\"\n                            required\n                            value={this.state.usuario.role}\n                            onChange={this.handleInputChange}\n                        />\n                    </div>\n                    <div className=\"usuario-insert\">\n                        <label htmlFor=\"salary\">Salário </label>\n                        <br />\n                        <input\n                            type=\"text\"\n                            id=\"salary\"\n                            name=\"salary\"\n                            placeholder=\"Salário\"\n                            maxLength=\"100\"\n                            required\n                            value={this.state.usuario.salary}\n                            onChange={this.handleInputChange}\n                        />\n                    </div>\n\n                    <div className=\"usuario-insert\">\n                        <button type=\"submit\" className=\"btn btn-primary\">\n                            Cadastrar\n                        </button>\n                        <Link to={`/`}> Voltar </Link>\n                    </div>\n                </fieldset>\n            </form>\n            );\n        }\n    }\n}\n\nexport default CriarUsuario;\n","import React, { Component } from \"react\";\nimport './update.css';\nimport { Redirect, Link } from \"react-router-dom\";\nimport api from '../../services/services';\n\nclass EditarUsuario extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            usuario: {\n                _id: 0,\n                name: \"\",\n                email: \"\",\n                password: \"\",\n                role: \"\",\n                salary: 0\n            },\n            redirect: false,\n        };\n\n    }\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n\n        const response = await api.get(`/users/${id}`);\n\n        this.setState({ usuario: response.data });\n    }\n\n    handleInputChange = event => {\n        const target = event.target;\n        const name = target.name;\n        const value = target.value;\n\n        this.setState(prevState => ({\n            usuario: { ...prevState.usuario, [name]: value }\n        }));\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const { id } = this.props.match.params;\n        const { usuario: { name, email, password, role, salary } } = this.state;\n\n        api.put(`/users/${id}`, {\n            name, email, password, role, salary\n        })\n            .then(response => {\n                console.log(response)\n                if (response.status === 200) {\n                    this.setState({ redirect: true });\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    };\n\n    render() {\n        const { redirect } = this.state;\n\n        if (redirect) {\n            return <Redirect to=\"/\" />;\n        } else {\n            return (\n                <form onSubmit={this.handleSubmit}>\n                    <fieldset>\n                        <legend>Atualizar Pessoa Usuária</legend>\n                        <div className=\"usuario-insert\">\n                            <label htmlFor=\"name\">Nome </label>\n                            <br />\n                            <input\n                                type=\"text\"\n                                id=\"name\"\n                                name=\"name\"\n                                placeholder=\"Nome\"\n                                maxLength=\"100\"\n                                required\n                                value={this.state.usuario.name}\n                                onChange={this.handleInputChange}\n                            />\n                        </div>\n                        <div className=\"usuario-insert\">\n                        <label htmlFor=\"email\">E-mail </label>\n                            <br />\n                            <input\n                                type=\"text\"\n                                id=\"email\"\n                                name=\"email\"\n                                placeholder=\"E-mail\"\n                                maxLength=\"100\"\n                                required\n                                value={this.state.usuario.email}\n                                onChange={this.handleInputChange}\n                            />\n                        </div>\n                        <div className=\"usuario-insert\">\n                            <label htmlFor=\"password\">Senha </label>\n                            <br />\n                            <input\n                                type=\"text\"\n                                id=\"password\"\n                                name=\"password\"\n                                placeholder=\"Senha\"\n                                maxLength=\"20\"\n                                required\n                                value={this.state.usuario.password}\n                                onChange={this.handleInputChange}\n                            />\n                        </div>\n                        <div className=\"usuario-insert\">\n                            <label htmlFor=\"role\">Papel </label>\n                            <br />\n                            <input\n                                type=\"text\"\n                                id=\"role\"\n                                name=\"role\"\n                                placeholder=\"Papel\"\n                                maxLength=\"50\"\n                                required\n                                value={this.state.usuario.role}\n                                onChange={this.handleInputChange}\n                            />\n                        </div>\n                        <div className=\"usuario-insert\">\n                            <label htmlFor=\"salary\">Salário </label>\n                            <br />\n                            <input\n                                type=\"text\"\n                                id=\"salary\"\n                                name=\"salary\"\n                                placeholder=\"Salário\"\n                                maxLength=\"100\"\n                                required\n                                value={this.state.usuario.salary}\n                                onChange={this.handleInputChange}\n                            />\n                        </div>\n\n                        <div className=\"usuario-insert\">\n                            <button type=\"submit\" className=\"btn btn-primary\">\n                                Atualizar\n                            </button>\n                            <Link to={`/`}> Voltar </Link>\n                        </div>\n                    </fieldset>\n                </form>\n            );\n        }\n    }\n}\n\nexport default EditarUsuario;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport api from '../../services/services';\nimport './delete.css';\n\nclass DeletarUsuario extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            usuario: {},\n            redirect: false\n        };\n    }\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n\n        const response = await api.get(`/users/${id}`);\n\n        this.setState({ usuario: response.data });\n    }\n\n    handleClick = event => {\n        const { id } = this.props.match.params;\n\n        fetch(`http://localhost:3000/users/${id}`, {\n            method: \"delete\"\n        })\n            .then(data => {\n                if (data.ok) {\n                    console.log(data)\n                    this.setState({ redirect: true });\n                }\n            })\n\n        event.preventDefault();\n    };\n\n    render() {\n        const { redirect, usuario } = this.state;\n\n        if (redirect) {\n            return <Redirect to=\"/\" />;\n        } else {\n            return (\n                <fieldset>\n                    <legend>Deletar Usuário</legend>\n                    <div className=\"usuario-delete\">\n                        <article key={usuario._id}>\n                            <strong> {usuario.name} </strong>\n                            <p>Tem certeza que deseja deletar este registro?</p>\n                            <button\n                                onClick={this.handleClick}\n                            >\n                                Remover\n                            </button>\n                            <Link to={`/`}>Voltar</Link>\n                        </article>\n                    </div>\n                </fieldset>\n            );\n        }\n    }\n}\n\nexport default DeletarUsuario;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Index from '../pages/index/index';\nimport Details from '../pages/details/details';\nimport Insert from '../pages/insert/insert';\nimport Update from '../pages/update/update';\nimport Delete from '../pages/delete/delete';\n\nconst Routes = () => (\n    \n    <BrowserRouter>\n        <Switch>\n            <Route exact path = \"/\" component={Index} />\n            <Route path = \"/usuarios/:id\" component={Details} />\n            <Route path = \"/criarusuario\" component={Insert} />\n            <Route path = \"/editarusuario/:id\" component={Update} />\n            <Route path = \"/deletarusuario/:id\" component={Delete} />\n        </Switch>\n    </BrowserRouter>\n)\n\nexport default Routes;","import React from 'react';\nimport Header from './components/header/header';\nimport Routes from './routes/routes';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}